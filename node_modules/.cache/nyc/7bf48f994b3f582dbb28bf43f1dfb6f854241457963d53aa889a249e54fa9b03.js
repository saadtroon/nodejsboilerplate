var cov_219aknqn1c=function(){var path="/home/saad/work/shopefynodepoject/controllers/AuthController.js";var hash="8b2c760ee3c81f45626ca99e19be9b62ad2273be";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/saad/work/shopefynodepoject/controllers/AuthController.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:48}},"1":{start:{line:2,column:34},end:{line:2,column:62}},"2":{start:{line:3,column:25},end:{line:3,column:53}},"3":{start:{line:5,column:20},end:{line:5,column:53}},"4":{start:{line:6,column:16},end:{line:6,column:45}},"5":{start:{line:7,column:15},end:{line:7,column:32}},"6":{start:{line:8,column:12},end:{line:8,column:35}},"7":{start:{line:9,column:22},end:{line:9,column:53}},"8":{start:{line:21,column:0},end:{line:71,column:4}},"9":{start:{line:29,column:3},end:{line:33,column:6}},"10":{start:{line:30,column:4},end:{line:32,column:5}},"11":{start:{line:31,column:5},end:{line:31,column:52}},"12":{start:{line:43,column:2},end:{line:70,column:3}},"13":{start:{line:45,column:18},end:{line:45,column:39}},"14":{start:{line:46,column:3},end:{line:66,column:4}},"15":{start:{line:48,column:4},end:{line:48,column:89}},"16":{start:{line:51,column:4},end:{line:65,column:7}},"17":{start:{line:53,column:15},end:{line:53,column:38}},"18":{start:{line:55,column:16},end:{line:63,column:6}},"19":{start:{line:69,column:3},end:{line:69,column:46}},"20":{start:{line:81,column:0},end:{line:135,column:4}},"21":{start:{line:88,column:2},end:{line:134,column:3}},"22":{start:{line:89,column:18},end:{line:89,column:39}},"23":{start:{line:90,column:3},end:{line:131,column:4}},"24":{start:{line:91,column:4},end:{line:91,column:89}},"25":{start:{line:93,column:4},end:{line:130,column:7}},"26":{start:{line:94,column:5},end:{line:129,column:6}},"27":{start:{line:96,column:6},end:{line:126,column:9}},"28":{start:{line:97,column:7},end:{line:125,column:8}},"29":{start:{line:99,column:8},end:{line:122,column:9}},"30":{start:{line:101,column:9},end:{line:119,column:10}},"31":{start:{line:102,column:25},end:{line:107,column:11}},"32":{start:{line:109,column:29},end:{line:109,column:37}},"33":{start:{line:110,column:26},end:{line:112,column:11}},"34":{start:{line:113,column:25},end:{line:113,column:47}},"35":{start:{line:115,column:10},end:{line:115,column:65}},"36":{start:{line:116,column:10},end:{line:116,column:85}},"37":{start:{line:118,column:10},end:{line:118,column:103}},"38":{start:{line:121,column:9},end:{line:121,column:112}},"39":{start:{line:124,column:8},end:{line:124,column:81}},"40":{start:{line:128,column:6},end:{line:128,column:79}},"41":{start:{line:133,column:3},end:{line:133,column:46}},"42":{start:{line:145,column:0},end:{line:186,column:4}},"43":{start:{line:152,column:2},end:{line:185,column:3}},"44":{start:{line:153,column:18},end:{line:153,column:39}},"45":{start:{line:154,column:3},end:{line:182,column:4}},"46":{start:{line:155,column:4},end:{line:155,column:89}},"47":{start:{line:157,column:16},end:{line:157,column:40}},"48":{start:{line:158,column:4},end:{line:181,column:7}},"49":{start:{line:159,column:5},end:{line:180,column:6}},"50":{start:{line:161,column:6},end:{line:177,column:7}},"51":{start:{line:163,column:7},end:{line:174,column:8}},"52":{start:{line:165,column:8},end:{line:170,column:11}},"53":{start:{line:169,column:9},end:{line:169,column:52}},"54":{start:{line:171,column:8},end:{line:171,column:77}},"55":{start:{line:173,column:8},end:{line:173,column:75}},"56":{start:{line:176,column:7},end:{line:176,column:82}},"57":{start:{line:179,column:6},end:{line:179,column:81}},"58":{start:{line:184,column:3},end:{line:184,column:46}},"59":{start:{line:195,column:0},end:{line:226,column:4}},"60":{start:{line:200,column:2},end:{line:225,column:3}},"61":{start:{line:201,column:18},end:{line:201,column:39}},"62":{start:{line:202,column:3},end:{line:222,column:4}},"63":{start:{line:203,column:4},end:{line:203,column:89}},"64":{start:{line:205,column:16},end:{line:205,column:40}},"65":{start:{line:206,column:4},end:{line:221,column:7}},"66":{start:{line:207,column:5},end:{line:220,column:6}},"67":{start:{line:209,column:6},end:{line:217,column:7}},"68":{start:{line:211,column:17},end:{line:211,column:40}},"69":{start:{line:213,column:18},end:{line:213,column:74}},"70":{start:{line:216,column:7},end:{line:216,column:82}},"71":{start:{line:219,column:6},end:{line:219,column:81}},"72":{start:{line:224,column:3},end:{line:224,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:72},end:{line:28,column:73}},loc:{start:{line:28,column:83},end:{line:34,column:3}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:50},end:{line:29,column:51}},loc:{start:{line:29,column:60},end:{line:33,column:4}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:42,column:1},end:{line:42,column:2}},loc:{start:{line:42,column:15},end:{line:71,column:2}},line:42},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:37},end:{line:51,column:38}},loc:{start:{line:51,column:57},end:{line:65,column:5}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:87,column:1},end:{line:87,column:2}},loc:{start:{line:87,column:15},end:{line:135,column:2}},line:87},"5":{name:"(anonymous_5)",decl:{start:{line:93,column:53},end:{line:93,column:54}},loc:{start:{line:93,column:61},end:{line:130,column:5}},line:93},"6":{name:"(anonymous_6)",decl:{start:{line:96,column:53},end:{line:96,column:54}},loc:{start:{line:96,column:73},end:{line:126,column:7}},line:96},"7":{name:"(anonymous_7)",decl:{start:{line:151,column:1},end:{line:151,column:2}},loc:{start:{line:151,column:15},end:{line:186,column:2}},line:151},"8":{name:"(anonymous_8)",decl:{start:{line:158,column:34},end:{line:158,column:35}},loc:{start:{line:158,column:42},end:{line:181,column:5}},line:158},"9":{name:"(anonymous_9)",decl:{start:{line:168,column:17},end:{line:168,column:18}},loc:{start:{line:168,column:24},end:{line:170,column:9}},line:168},"10":{name:"(anonymous_10)",decl:{start:{line:199,column:1},end:{line:199,column:2}},loc:{start:{line:199,column:15},end:{line:226,column:2}},line:199},"11":{name:"(anonymous_11)",decl:{start:{line:206,column:34},end:{line:206,column:35}},loc:{start:{line:206,column:42},end:{line:221,column:5}},line:206}},branchMap:{"0":{loc:{start:{line:30,column:4},end:{line:32,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:32,column:5}},{start:{line:30,column:4},end:{line:32,column:5}}],line:30},"1":{loc:{start:{line:46,column:3},end:{line:66,column:4}},type:"if",locations:[{start:{line:46,column:3},end:{line:66,column:4}},{start:{line:46,column:3},end:{line:66,column:4}}],line:46},"2":{loc:{start:{line:90,column:3},end:{line:131,column:4}},type:"if",locations:[{start:{line:90,column:3},end:{line:131,column:4}},{start:{line:90,column:3},end:{line:131,column:4}}],line:90},"3":{loc:{start:{line:94,column:5},end:{line:129,column:6}},type:"if",locations:[{start:{line:94,column:5},end:{line:129,column:6}},{start:{line:94,column:5},end:{line:129,column:6}}],line:94},"4":{loc:{start:{line:97,column:7},end:{line:125,column:8}},type:"if",locations:[{start:{line:97,column:7},end:{line:125,column:8}},{start:{line:97,column:7},end:{line:125,column:8}}],line:97},"5":{loc:{start:{line:99,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:122,column:9}},{start:{line:99,column:8},end:{line:122,column:9}}],line:99},"6":{loc:{start:{line:101,column:9},end:{line:119,column:10}},type:"if",locations:[{start:{line:101,column:9},end:{line:119,column:10}},{start:{line:101,column:9},end:{line:119,column:10}}],line:101},"7":{loc:{start:{line:154,column:3},end:{line:182,column:4}},type:"if",locations:[{start:{line:154,column:3},end:{line:182,column:4}},{start:{line:154,column:3},end:{line:182,column:4}}],line:154},"8":{loc:{start:{line:159,column:5},end:{line:180,column:6}},type:"if",locations:[{start:{line:159,column:5},end:{line:180,column:6}},{start:{line:159,column:5},end:{line:180,column:6}}],line:159},"9":{loc:{start:{line:161,column:6},end:{line:177,column:7}},type:"if",locations:[{start:{line:161,column:6},end:{line:177,column:7}},{start:{line:161,column:6},end:{line:177,column:7}}],line:161},"10":{loc:{start:{line:163,column:7},end:{line:174,column:8}},type:"if",locations:[{start:{line:163,column:7},end:{line:174,column:8}},{start:{line:163,column:7},end:{line:174,column:8}}],line:163},"11":{loc:{start:{line:202,column:3},end:{line:222,column:4}},type:"if",locations:[{start:{line:202,column:3},end:{line:222,column:4}},{start:{line:202,column:3},end:{line:222,column:4}}],line:202},"12":{loc:{start:{line:207,column:5},end:{line:220,column:6}},type:"if",locations:[{start:{line:207,column:5},end:{line:220,column:6}},{start:{line:207,column:5},end:{line:220,column:6}}],line:207},"13":{loc:{start:{line:209,column:6},end:{line:217,column:7}},type:"if",locations:[{start:{line:209,column:6},end:{line:217,column:7}},{start:{line:209,column:6},end:{line:217,column:7}}],line:209}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"8b2c760ee3c81f45626ca99e19be9b62ad2273be"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const UserModel=(cov_219aknqn1c.s[0]++,require("../models/UserModel"));const{body,validationResult}=(cov_219aknqn1c.s[1]++,require("express-validator"));const{sanitizeBody}=(cov_219aknqn1c.s[2]++,require("express-validator"));//helper file to prepare responses.
const apiResponse=(cov_219aknqn1c.s[3]++,require("../helpers/apiResponse"));const utility=(cov_219aknqn1c.s[4]++,require("../helpers/utility"));const bcrypt=(cov_219aknqn1c.s[5]++,require("bcrypt"));const jwt=(cov_219aknqn1c.s[6]++,require("jsonwebtoken"));const{constants}=(cov_219aknqn1c.s[7]++,require("../helpers/constants"));/**
 * User registration.
 *
 * @param {string}      firstName
 * @param {string}      lastName
 * @param {string}      email
 * @param {string}      password
 *
 * @returns {Object}
 */cov_219aknqn1c.s[8]++;exports.register=[// Validate fields.
body("firstName").isLength({min:1}).trim().withMessage("First name must be specified.").isAlphanumeric().withMessage("First name has non-alphanumeric characters."),body("lastName").isLength({min:1}).trim().withMessage("Last name must be specified.").isAlphanumeric().withMessage("Last name has non-alphanumeric characters."),body("email").isLength({min:1}).trim().withMessage("Email must be specified.").isEmail().withMessage("Email must be a valid email address.").custom(value=>{cov_219aknqn1c.f[0]++;cov_219aknqn1c.s[9]++;return UserModel.findOne({email:value}).then(user=>{cov_219aknqn1c.f[1]++;cov_219aknqn1c.s[10]++;if(user){cov_219aknqn1c.b[0][0]++;cov_219aknqn1c.s[11]++;return Promise.reject("E-mail already in use");}else{cov_219aknqn1c.b[0][1]++;}});}),body("password").isLength({min:6}).trim().withMessage("Password must be 6 characters or greater."),// Sanitize fields.
sanitizeBody("firstName").escape(),sanitizeBody("lastName").escape(),sanitizeBody("email").escape(),sanitizeBody("password").escape(),// Process request after validation and sanitization.
(req,res)=>{cov_219aknqn1c.f[2]++;cov_219aknqn1c.s[12]++;try{// Extract the validation errors from a request.
const errors=(cov_219aknqn1c.s[13]++,validationResult(req));cov_219aknqn1c.s[14]++;if(!errors.isEmpty()){cov_219aknqn1c.b[1][0]++;cov_219aknqn1c.s[15]++;// Display sanitized values/errors messages.
return apiResponse.validationErrorWithData(res,"Validation Error.",errors.array());}else{cov_219aknqn1c.b[1][1]++;cov_219aknqn1c.s[16]++;//hash input password
bcrypt.hash(req.body.password,10,function(err,hash){cov_219aknqn1c.f[3]++;// generate OTP for confirmation
let otp=(cov_219aknqn1c.s[17]++,utility.randomNumber(4));// Create User object with escaped and trimmed data
var user=(cov_219aknqn1c.s[18]++,new UserModel({firstName:req.body.firstName,lastName:req.body.lastName,email:req.body.email,password:hash,confirmOTP:otp}));});}}catch(err){cov_219aknqn1c.s[19]++;//throw error in json response with status 500.
return apiResponse.ErrorResponse(res,err);}}];/**
 * User login.
 *
 * @param {string}      email
 * @param {string}      password
 *
 * @returns {Object}
 */cov_219aknqn1c.s[20]++;exports.login=[body("email").isLength({min:1}).trim().withMessage("Email must be specified.").isEmail().withMessage("Email must be a valid email address."),body("password").isLength({min:1}).trim().withMessage("Password must be specified."),sanitizeBody("email").escape(),sanitizeBody("password").escape(),(req,res)=>{cov_219aknqn1c.f[4]++;cov_219aknqn1c.s[21]++;try{const errors=(cov_219aknqn1c.s[22]++,validationResult(req));cov_219aknqn1c.s[23]++;if(!errors.isEmpty()){cov_219aknqn1c.b[2][0]++;cov_219aknqn1c.s[24]++;return apiResponse.validationErrorWithData(res,"Validation Error.",errors.array());}else{cov_219aknqn1c.b[2][1]++;cov_219aknqn1c.s[25]++;UserModel.findOne({email:req.body.email}).then(user=>{cov_219aknqn1c.f[5]++;cov_219aknqn1c.s[26]++;if(user){cov_219aknqn1c.b[3][0]++;cov_219aknqn1c.s[27]++;//Compare given password with db's hash.
bcrypt.compare(req.body.password,user.password,function(err,same){cov_219aknqn1c.f[6]++;cov_219aknqn1c.s[28]++;if(same){cov_219aknqn1c.b[4][0]++;cov_219aknqn1c.s[29]++;//Check account confirmation.
if(user.isConfirmed){cov_219aknqn1c.b[5][0]++;cov_219aknqn1c.s[30]++;// Check User's account active or not.
if(user.status){cov_219aknqn1c.b[6][0]++;let userData=(cov_219aknqn1c.s[31]++,{_id:user._id,firstName:user.firstName,lastName:user.lastName,email:user.email});//Prepare JWT token for authentication
const jwtPayload=(cov_219aknqn1c.s[32]++,userData);const jwtData=(cov_219aknqn1c.s[33]++,{expiresIn:process.env.JWT_TIMEOUT_DURATION});const secret=(cov_219aknqn1c.s[34]++,process.env.JWT_SECRET);//Generated JWT token with Payload and secret.
cov_219aknqn1c.s[35]++;userData.token=jwt.sign(jwtPayload,secret,jwtData);cov_219aknqn1c.s[36]++;return apiResponse.successResponseWithData(res,"Login Success.",userData);}else{cov_219aknqn1c.b[6][1]++;cov_219aknqn1c.s[37]++;return apiResponse.unauthorizedResponse(res,"Account is not active. Please contact admin.");}}else{cov_219aknqn1c.b[5][1]++;cov_219aknqn1c.s[38]++;return apiResponse.unauthorizedResponse(res,"Account is not confirmed. Please confirm your account.");}}else{cov_219aknqn1c.b[4][1]++;cov_219aknqn1c.s[39]++;return apiResponse.unauthorizedResponse(res,"Email or Password wrong.");}});}else{cov_219aknqn1c.b[3][1]++;cov_219aknqn1c.s[40]++;return apiResponse.unauthorizedResponse(res,"Email or Password wrong.");}});}}catch(err){cov_219aknqn1c.s[41]++;return apiResponse.ErrorResponse(res,err);}}];/**
 * Verify Confirm otp.
 *
 * @param {string}      email
 * @param {string}      otp
 *
 * @returns {Object}
 */cov_219aknqn1c.s[42]++;exports.verifyConfirm=[body("email").isLength({min:1}).trim().withMessage("Email must be specified.").isEmail().withMessage("Email must be a valid email address."),body("otp").isLength({min:1}).trim().withMessage("OTP must be specified."),sanitizeBody("email").escape(),sanitizeBody("otp").escape(),(req,res)=>{cov_219aknqn1c.f[7]++;cov_219aknqn1c.s[43]++;try{const errors=(cov_219aknqn1c.s[44]++,validationResult(req));cov_219aknqn1c.s[45]++;if(!errors.isEmpty()){cov_219aknqn1c.b[7][0]++;cov_219aknqn1c.s[46]++;return apiResponse.validationErrorWithData(res,"Validation Error.",errors.array());}else{cov_219aknqn1c.b[7][1]++;var query=(cov_219aknqn1c.s[47]++,{email:req.body.email});cov_219aknqn1c.s[48]++;UserModel.findOne(query).then(user=>{cov_219aknqn1c.f[8]++;cov_219aknqn1c.s[49]++;if(user){cov_219aknqn1c.b[8][0]++;cov_219aknqn1c.s[50]++;//Check already confirm or not.
if(!user.isConfirmed){cov_219aknqn1c.b[9][0]++;cov_219aknqn1c.s[51]++;//Check account confirmation.
if(user.confirmOTP==req.body.otp){cov_219aknqn1c.b[10][0]++;cov_219aknqn1c.s[52]++;//Update user as confirmed
UserModel.findOneAndUpdate(query,{isConfirmed:1,confirmOTP:null}).catch(err=>{cov_219aknqn1c.f[9]++;cov_219aknqn1c.s[53]++;return apiResponse.ErrorResponse(res,err);});cov_219aknqn1c.s[54]++;return apiResponse.successResponse(res,"Account confirmed success.");}else{cov_219aknqn1c.b[10][1]++;cov_219aknqn1c.s[55]++;return apiResponse.unauthorizedResponse(res,"Otp does not match");}}else{cov_219aknqn1c.b[9][1]++;cov_219aknqn1c.s[56]++;return apiResponse.unauthorizedResponse(res,"Account already confirmed.");}}else{cov_219aknqn1c.b[8][1]++;cov_219aknqn1c.s[57]++;return apiResponse.unauthorizedResponse(res,"Specified email not found.");}});}}catch(err){cov_219aknqn1c.s[58]++;return apiResponse.ErrorResponse(res,err);}}];/**
 * Resend Confirm otp.
 *
 * @param {string}      email
 *
 * @returns {Object}
 */cov_219aknqn1c.s[59]++;exports.resendConfirmOtp=[body("email").isLength({min:1}).trim().withMessage("Email must be specified.").isEmail().withMessage("Email must be a valid email address."),sanitizeBody("email").escape(),(req,res)=>{cov_219aknqn1c.f[10]++;cov_219aknqn1c.s[60]++;try{const errors=(cov_219aknqn1c.s[61]++,validationResult(req));cov_219aknqn1c.s[62]++;if(!errors.isEmpty()){cov_219aknqn1c.b[11][0]++;cov_219aknqn1c.s[63]++;return apiResponse.validationErrorWithData(res,"Validation Error.",errors.array());}else{cov_219aknqn1c.b[11][1]++;var query=(cov_219aknqn1c.s[64]++,{email:req.body.email});cov_219aknqn1c.s[65]++;UserModel.findOne(query).then(user=>{cov_219aknqn1c.f[11]++;cov_219aknqn1c.s[66]++;if(user){cov_219aknqn1c.b[12][0]++;cov_219aknqn1c.s[67]++;//Check already confirm or not.
if(!user.isConfirmed){cov_219aknqn1c.b[13][0]++;// Generate otp
let otp=(cov_219aknqn1c.s[68]++,utility.randomNumber(4));// Html email body
let html=(cov_219aknqn1c.s[69]++,"<p>Please Confirm your Account.</p><p>OTP: "+otp+"</p>");}else{cov_219aknqn1c.b[13][1]++;cov_219aknqn1c.s[70]++;return apiResponse.unauthorizedResponse(res,"Account already confirmed.");}}else{cov_219aknqn1c.b[12][1]++;cov_219aknqn1c.s[71]++;return apiResponse.unauthorizedResponse(res,"Specified email not found.");}});}}catch(err){cov_219aknqn1c.s[72]++;return apiResponse.ErrorResponse(res,err);}}];